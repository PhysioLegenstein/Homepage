{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/divWithClassName.js","webpack:///./node_modules/react-bootstrap/esm/CardImg.js","webpack:///./node_modules/react-bootstrap/esm/Card.js","webpack:///./node_modules/react-bootstrap/esm/AccordionContext.js","webpack:///./node_modules/react-bootstrap/esm/AccordionToggle.js","webpack:///./node_modules/react-bootstrap/esm/AccordionCollapse.js","webpack:///./node_modules/react-bootstrap/esm/Accordion.js","webpack:///./src/pages/patienteninfo.js"],"names":["forwardRef","p","ref","createElement","className","CardImg","_ref","bsPrefix","variant","_ref$as","as","Component","props","prefix","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","text","border","body","children","cardContext","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","context","createContext","eventKey","onClick","accordionOnClick","contextEventKey","AccordionContext","onSelect","SelectableContext","e","useAccordionToggle","type","AccordionCollapse","Collapse","in","Children","only","Accordion","_useUncontrolled","activeKey","_useUncontrolled$as","controlledProps","finalClassName","Toggle","InfoPage","title","Container","Row","Col","lg","md","id","defaultActiveKey"],"mappings":"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","file":"component---src-pages-patienteninfo-js-9d1a6264676f5ee8ce9d.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return React.forwardRef(function (p, ref) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import React from 'react';\nvar context = React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nvar AccordionCollapse = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext);\n  return /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children)));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import React from \"react\"\nimport Container from \"react-bootstrap/Container\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Card from \"react-bootstrap/Card\"\nimport Accordion from \"react-bootstrap/Accordion\"\n\nimport Seo from \"../components/seo\"\nimport Layout from \"../components/layout\"\n\nconst InfoPage = () => {\n  return (\n    <Layout>\n      <Seo title=\"Patienteninfo\" />\n      <Container className=\"text-left border rounded shadow site-section\">\n        <h1>Organisatorisches zur Physiotherapie</h1>\n      </Container>\n      <Container>\n        <Row>\n          <Col lg={4} md={12} className=\"mb-3\">\n            <div className=\"info-box shadow\" id=\"info-box-one\">\n              <h4><b>1.</b> Die ärztliche Verordnung...</h4>\n              <hr></hr>\n              <ul>\n                <li>gültige ärztliche Verordnung, ausgestellt von Ihrem Hausarzt bzw. Facharzt</li>\n                <li>VOR der ersten Therapieeinheit</li>\n                <li>die Verordnung sollte folgendes beinhalten: Therapieart, Anzahl, Dauer und Therapeutenname</li>\n                <br></br>\n                <i>z.B.: 10 x Einzelheilgymnastik a 45min, Herrn Legenstein</i>\n              </ul>\n              <i>Empfehlung: Bewilligen Sie Ihre ärztliche Verordnung vorab bei der Krankenkasse</i>\n            </div>\n            \n          </Col>\n          <Col lg={4} md={12} className=\"mb-3\">\n            <div className=\"info-box shadow\" id=\"info-box-two\">\n              <h4><b>2.</b> Zur Therapie...</h4>\n              <hr></hr>\n              Mitzunehmen:\n              <ul>\n                <li>ärztliche Verordnung</li>\n                <li>wenn vorhanden aktuelle medizinisch relevante Unterlagen (Befunde, Röntgen, Entlassungsberichte, ...)</li>\n                <li>bequeme Kleidung</li>\n                <li>großes Handtuch</li>\n              </ul>\n              <i>WICHTIG: Aufgrund der aktuellen Situation ist das Betreten der Praxis nur mit Mund-Nasenschutz erlaubt</i>\n            </div>\n          </Col>\n          <Col lg={4} md={12} className=\"mb-3\">\n            <div className=\"info-box shadow\" id=\"info-box-three\">\n              <h4><b>3.</b> Rückerstattung...</h4>\n              <hr></hr>\n              Die Krankenkasse benötigt:\n              <ul>\n                <li>Honorarnote + Zahlungsbestätigung</li>\n                <li>bewilligte ärztliche Verordnung</li>\n              </ul>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n      <Container className=\"text-left border rounded shadow site-section\">\n        <h1>Häufige Fragen</h1>\n        <div className=\"faq-section\">\n          <Accordion defaultActiveKey=\"0\">\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                Welche Sicherheitsmaßnahmen werden aufgrund des Coronaviruses durchgeführt?\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"0\">\n                <Card.Body>\n                  <ol>\n                    <li>Bei vorliegenden Symptomen die mit dem Coronavirus in Verbindung stehen bitte nicht die Praxis aufsuchen - wir werden telefonisch einen Ersatztermin organisieren.</li>\n                    <li>Hatten Sie Kontakt mit einer kürzlich positiv getesteten Person - auch hier bitte um telefonische Rücksprache.</li>\n                    <li>In den Räumlichkeiten der Praxis ist das Tragen eines Nasen-Mundschutzes oder eines Face-Shields erforderlich.</li>\n                    <li>Zu Beginn der Therapie bitten wir um eine gründliche Handdesinfektion.</li>\n                    <li>Um das Überschneiden von Patiententerminen zu vermeiden um so den Kontakt mit anderen Patienten gering zu halten - bitte um ein pünktliches Erscheinen.</li>\n                  </ol>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                Was muss ich zur Physiotherapie mitbringen?\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"1\">\n                <Card.Body>\n                  Für die erste Therapieeinheit werden alle <b>relevanten Befunde</b> und die <b>ärztliche Zuweisung</b> benötigt. Ansonsten sollten Sie <b>bequeme Kleidung</b> und ein frisches <b>Handtuch</b> mitbringen.\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n                Wie läuft der erste Termin ab?\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"2\">\n                <Card.Body>\n                  Beim ersten Termin wird zunächst ein <b>genauer Befund</b> aufgenommen (Vorgeschichte, Problemfindung, Zielsetzung, …). Nach Durchführung verschiedener Tests und Untersuchung des Problembereichs wird eine physiotherapeutische Arbeitsdiagnose gestellt. Gemeinsam mit Ihnen wird dann ein <b>Behandlungsplan</b> erstellt um <b>Ihre definierten Ziele bestmöglich zu erreichen</b>.\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"3\">\n                Was bedeutet Wahltherapeut?\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"3\">\n                <Card.Body>\n                  Als Wahltherapeut habe ich keinen direkten Vertrag mit der Krankenkasse. Sie erhalten nach einer oder mehreren Behandlungsterminen eine Rechnung. Nach der Begleichung schicken Sie die Rechnung samt Zahlungsbestätigung zu Ihrer Krankenkasse. Sie bekommen dann gemäß den Tarifen Ihrer Versicherung einen Teilbetrag refundiert.\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"4\">\n                Wie können vereinbarte Termine abgesagt werden?\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"4\">\n                <Card.Body>\n                  Terminabsagen bitte spätestens 24h im Vorhinein. Absagen ausschließlich telefonisch per Anruf, SMS oder Mailbox. Bitte haben Sie Verständnis, dass bei zu spät abgesagten Terminen oder dem nicht erscheinen zum Termin 50% der Honorarnote ausgestellt werden. Die Krankenkassa übernimmt hierbei keine Kosten.\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          </Accordion>\n        </div>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default InfoPage\n"],"sourceRoot":""}